#include <stdio.h>
#include <stdlib.h>

typedef struct Node {
    int data;
    struct Node* left;
    struct Node* right;
} Node;

Node* createNode(int data);
int findDepth(Node* root, int key, int depth);

Node* createNode(int data) {
    Node* newNode = (Node*)malloc(sizeof(Node));
    newNode->data = data;
    newNode->left = NULL;
    newNode->right = NULL;
    return newNode;
}

int findDepth(Node* root, int key, int depth) {
    if (root == NULL) {
        return -1;
    }

    if (root->data == key) {
        return depth;
    }

    int leftDepth = findDepth(root->left, key, depth + 1);
    if (leftDepth != -1) {
        return leftDepth;
    }

    return findDepth(root->right, key, depth + 1);
}

int main() {

    Node* root = createNode(50);
    root->left = createNode(30);
    root->right = createNode(70);
    root->left->left = createNode(20);
    root->left->right = createNode(40);
    root->right->left = createNode(60);
    root->right->right = createNode(80);

    int key = 40;

    int depth = findDepth(root, key, 0);

    if (depth != -1) {
        printf("Depth of node with key %d: %d\n", key, depth);
    } else {
        printf("Node with key %d not found in the tree.\n", key);
    }

    return 0;
}
